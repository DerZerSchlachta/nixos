# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}:

{
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = [
    "nvme"
    "xhci_pci"
    "ahci"
    "usbhid"
    "usb_storage"
    "sd_mod"
  ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/f147c7b3-5ad1-420e-86af-a909ed28e61e";
    fsType = "ext4";
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/18DB-9B01";
    fsType = "vfat";
    options = [
      "fmask=0077"
      "dmask=0077"
    ];
  };

  swapDevices = lib.mkForce [ ];
  /*
  # Swapfile configuration
  swapDevices = [
    {
      device = "/var/lib/swapfile";
      size = 32768; # in MB
    }
  ];

  # Root partition where swapfile lives
  boot.resumeDevice = "/dev/disk/by-uuid/f147c7b3-5ad1-420e-86af-a909ed28e61e";

  # Resume settings
  boot.kernelParams = [
    "resume=/dev/disk/by-uuid/f147c7b3-5ad1-420e-86af-a909ed28e61e"
    "resume_offset=174948352"
    "no_console_suspend"
    "mem_sleep_default=deep"
  ];
  */
  fileSystems."/mnt/Johannes" = {
    device = "192.168.0.202:/mnt/user/Johannes";
    fsType = "nfs";
    options = [
      "x-systemd.automount"
      "x-systemd.requires=network-online.target"
      "x-systemd.after=network-online.target"
      "nofail"
    ];
  };
  fileSystems."/mnt/media" = {
    device = "192.168.0.202:/mnt/user/Media";
    fsType = "nfs";
    options = [
      "x-systemd.automount"
      "x-systemd.requires=network-online.target"
      "x-systemd.after=network-online.target"
      "nofail"
    ];
  };

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno1.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp7s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
